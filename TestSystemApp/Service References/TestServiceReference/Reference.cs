//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.34209
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestSystemApp.TestServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TestInstance", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class TestInstance : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DisciplineTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCurrentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinuteTimeLimitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionCountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DisciplineType {
            get {
                return this.DisciplineTypeField;
            }
            set {
                if ((this.DisciplineTypeField.Equals(value) != true)) {
                    this.DisciplineTypeField = value;
                    this.RaisePropertyChanged("DisciplineType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCurrent {
            get {
                return this.IsCurrentField;
            }
            set {
                if ((this.IsCurrentField.Equals(value) != true)) {
                    this.IsCurrentField = value;
                    this.RaisePropertyChanged("IsCurrent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinuteTimeLimit {
            get {
                return this.MinuteTimeLimitField;
            }
            set {
                if ((this.MinuteTimeLimitField.Equals(value) != true)) {
                    this.MinuteTimeLimitField = value;
                    this.RaisePropertyChanged("MinuteTimeLimit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionCount {
            get {
                return this.QuestionCountField;
            }
            set {
                if ((this.QuestionCountField.Equals(value) != true)) {
                    this.QuestionCountField = value;
                    this.RaisePropertyChanged("QuestionCount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Student : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatronymicField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupNumber {
            get {
                return this.GroupNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNumberField, value) != true)) {
                    this.GroupNumberField = value;
                    this.RaisePropertyChanged("GroupNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Patronymic {
            get {
                return this.PatronymicField;
            }
            set {
                if ((object.ReferenceEquals(this.PatronymicField, value) != true)) {
                    this.PatronymicField = value;
                    this.RaisePropertyChanged("Patronymic");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Question", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Question : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestSystemApp.TestServiceReference.Answer[] AnswersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiyedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestSystemApp.TestServiceReference.Answer[] Answers {
            get {
                return this.AnswersField;
            }
            set {
                if ((object.ReferenceEquals(this.AnswersField, value) != true)) {
                    this.AnswersField = value;
                    this.RaisePropertyChanged("Answers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Modifiyed {
            get {
                return this.ModifiyedField;
            }
            set {
                if ((this.ModifiyedField.Equals(value) != true)) {
                    this.ModifiyedField = value;
                    this.RaisePropertyChanged("Modifiyed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Answer", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class Answer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ModifiyedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuestionIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRight {
            get {
                return this.IsRightField;
            }
            set {
                if ((this.IsRightField.Equals(value) != true)) {
                    this.IsRightField = value;
                    this.RaisePropertyChanged("IsRight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Modifiyed {
            get {
                return this.ModifiyedField;
            }
            set {
                if ((this.ModifiyedField.Equals(value) != true)) {
                    this.ModifiyedField = value;
                    this.RaisePropertyChanged("Modifiyed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuestionId {
            get {
                return this.QuestionIdField;
            }
            set {
                if ((this.QuestionIdField.Equals(value) != true)) {
                    this.QuestionIdField = value;
                    this.RaisePropertyChanged("QuestionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StudentTestResult", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceLibrary.DataContract")]
    [System.SerializableAttribute()]
    public partial class StudentTestResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AllQuestionCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestSystemApp.TestServiceReference.Grade GradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PersentResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RightQuestionCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TestSystemApp.TestServiceReference.Student StudentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TimeIsUpField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AllQuestionCount {
            get {
                return this.AllQuestionCountField;
            }
            set {
                if ((this.AllQuestionCountField.Equals(value) != true)) {
                    this.AllQuestionCountField = value;
                    this.RaisePropertyChanged("AllQuestionCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestSystemApp.TestServiceReference.Grade Grade {
            get {
                return this.GradeField;
            }
            set {
                if ((this.GradeField.Equals(value) != true)) {
                    this.GradeField = value;
                    this.RaisePropertyChanged("Grade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double PersentResult {
            get {
                return this.PersentResultField;
            }
            set {
                if ((this.PersentResultField.Equals(value) != true)) {
                    this.PersentResultField = value;
                    this.RaisePropertyChanged("PersentResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RightQuestionCount {
            get {
                return this.RightQuestionCountField;
            }
            set {
                if ((this.RightQuestionCountField.Equals(value) != true)) {
                    this.RightQuestionCountField = value;
                    this.RaisePropertyChanged("RightQuestionCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TestSystemApp.TestServiceReference.Student Student {
            get {
                return this.StudentField;
            }
            set {
                if ((object.ReferenceEquals(this.StudentField, value) != true)) {
                    this.StudentField = value;
                    this.RaisePropertyChanged("Student");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TimeIsUp {
            get {
                return this.TimeIsUpField;
            }
            set {
                if ((this.TimeIsUpField.Equals(value) != true)) {
                    this.TimeIsUpField = value;
                    this.RaisePropertyChanged("TimeIsUp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Grade", Namespace="http://schemas.datacontract.org/2004/07/WCFServiceLibrary.Enum")]
    public enum Grade : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Poor = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Satisfactory = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Good = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Excellent = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TestServiceReference.ITestSystemService")]
    public interface ITestSystemService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestSystemService/GetCurrentTest", ReplyAction="http://tempuri.org/ITestSystemService/GetCurrentTestResponse")]
        TestSystemApp.TestServiceReference.TestInstance GetCurrentTest();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestSystemService/RigisterStudent", ReplyAction="http://tempuri.org/ITestSystemService/RigisterStudentResponse")]
        int RigisterStudent(TestSystemApp.TestServiceReference.Student newStudent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestSystemService/StartTest", ReplyAction="http://tempuri.org/ITestSystemService/StartTestResponse")]
        System.Guid StartTest(int testId, int studentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestSystemService/GetQuestion4Atempt", ReplyAction="http://tempuri.org/ITestSystemService/GetQuestion4AtemptResponse")]
        TestSystemApp.TestServiceReference.Question[] GetQuestion4Atempt(int testId, System.Guid atemptKey);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestSystemService/FinishTest", ReplyAction="http://tempuri.org/ITestSystemService/FinishTestResponse")]
        int FinishTest(System.Guid atemptKey, bool timeIsUp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestSystemService/SubmitQuestionAnswers", ReplyAction="http://tempuri.org/ITestSystemService/SubmitQuestionAnswersResponse")]
        bool SubmitQuestionAnswers(System.Guid atemptKey, int questionId, int[] anwersIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestSystemService/GetStudentTestResult", ReplyAction="http://tempuri.org/ITestSystemService/GetStudentTestResultResponse")]
        TestSystemApp.TestServiceReference.StudentTestResult GetStudentTestResult(int attemptId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITestSystemServiceChannel : TestSystemApp.TestServiceReference.ITestSystemService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestSystemServiceClient : System.ServiceModel.ClientBase<TestSystemApp.TestServiceReference.ITestSystemService>, TestSystemApp.TestServiceReference.ITestSystemService {
        
        public TestSystemServiceClient() {
        }
        
        public TestSystemServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TestSystemServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TestSystemServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TestSystemServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TestSystemApp.TestServiceReference.TestInstance GetCurrentTest() {
            return base.Channel.GetCurrentTest();
        }
        
        public int RigisterStudent(TestSystemApp.TestServiceReference.Student newStudent) {
            return base.Channel.RigisterStudent(newStudent);
        }
        
        public System.Guid StartTest(int testId, int studentId) {
            return base.Channel.StartTest(testId, studentId);
        }
        
        public TestSystemApp.TestServiceReference.Question[] GetQuestion4Atempt(int testId, System.Guid atemptKey) {
            return base.Channel.GetQuestion4Atempt(testId, atemptKey);
        }
        
        public int FinishTest(System.Guid atemptKey, bool timeIsUp) {
            return base.Channel.FinishTest(atemptKey, timeIsUp);
        }
        
        public bool SubmitQuestionAnswers(System.Guid atemptKey, int questionId, int[] anwersIds) {
            return base.Channel.SubmitQuestionAnswers(atemptKey, questionId, anwersIds);
        }
        
        public TestSystemApp.TestServiceReference.StudentTestResult GetStudentTestResult(int attemptId) {
            return base.Channel.GetStudentTestResult(attemptId);
        }
    }
}
